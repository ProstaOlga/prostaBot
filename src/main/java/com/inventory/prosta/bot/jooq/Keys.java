/*
 * This file is generated by jOOQ.
 */
package jooq;


import jooq.tables.Account;
import jooq.tables.AccountChat;
import jooq.tables.ChatDb;
import jooq.tables.FlywaySchemaHistory;
import jooq.tables.Media;
import jooq.tables.MediaChat;
import jooq.tables.records.AccountChatRecord;
import jooq.tables.records.AccountRecord;
import jooq.tables.records.ChatDbRecord;
import jooq.tables.records.FlywaySchemaHistoryRecord;
import jooq.tables.records.MediaChatRecord;
import jooq.tables.records.MediaRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AccountRecord> ACCOUNT_PKEY = Internal.createUniqueKey(Account.ACCOUNT, DSL.name("account_pkey"), new TableField[] { Account.ACCOUNT.TELEGRAM_ID }, true);
    public static final UniqueKey<AccountChatRecord> ACCOUNT_CHAT_PKEY = Internal.createUniqueKey(AccountChat.ACCOUNT_CHAT, DSL.name("account_chat_pkey"), new TableField[] { AccountChat.ACCOUNT_CHAT.ID }, true);
    public static final UniqueKey<ChatDbRecord> CHAT_DB_PKEY = Internal.createUniqueKey(ChatDb.CHAT_DB, DSL.name("chat_db_pkey"), new TableField[] { ChatDb.CHAT_DB.CHAT_ID }, true);
    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, DSL.name("flyway_schema_history_pk"), new TableField[] { FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);
    public static final UniqueKey<MediaRecord> MEDIA_PKEY = Internal.createUniqueKey(Media.MEDIA, DSL.name("media_pkey"), new TableField[] { Media.MEDIA.ID }, true);
    public static final UniqueKey<MediaChatRecord> MEDIA_CHAT_PKEY = Internal.createUniqueKey(MediaChat.MEDIA_CHAT, DSL.name("media_chat_pkey"), new TableField[] { MediaChat.MEDIA_CHAT.MEDIA_ID, MediaChat.MEDIA_CHAT.CHAT_ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AccountChatRecord, AccountRecord> ACCOUNT_CHAT__FK_EXISTS_ACCOUNT = Internal.createForeignKey(AccountChat.ACCOUNT_CHAT, DSL.name("fk_exists_account"), new TableField[] { AccountChat.ACCOUNT_CHAT.ACCOUNT_ID }, Keys.ACCOUNT_PKEY, new TableField[] { Account.ACCOUNT.TELEGRAM_ID }, true);
    public static final ForeignKey<AccountChatRecord, ChatDbRecord> ACCOUNT_CHAT__FK_EXISTS_CHAT_DB = Internal.createForeignKey(AccountChat.ACCOUNT_CHAT, DSL.name("fk_exists_chat_db"), new TableField[] { AccountChat.ACCOUNT_CHAT.CHAT_ID }, Keys.CHAT_DB_PKEY, new TableField[] { ChatDb.CHAT_DB.CHAT_ID }, true);
    public static final ForeignKey<MediaChatRecord, ChatDbRecord> MEDIA_CHAT__FK_EXISTS_CHAT_DB = Internal.createForeignKey(MediaChat.MEDIA_CHAT, DSL.name("fk_exists_chat_db"), new TableField[] { MediaChat.MEDIA_CHAT.CHAT_ID }, Keys.CHAT_DB_PKEY, new TableField[] { ChatDb.CHAT_DB.CHAT_ID }, true);
    public static final ForeignKey<MediaChatRecord, MediaRecord> MEDIA_CHAT__FK_EXISTS_MEDIA = Internal.createForeignKey(MediaChat.MEDIA_CHAT, DSL.name("fk_exists_media"), new TableField[] { MediaChat.MEDIA_CHAT.MEDIA_ID }, Keys.MEDIA_PKEY, new TableField[] { Media.MEDIA.ID }, true);
}
