/*
 * This file is generated by jOOQ.
 */
package jooq.tables.records;


import java.util.UUID;

import jooq.tables.Media;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MediaRecord extends UpdatableRecordImpl<MediaRecord> implements Record4<UUID, byte[], String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.media.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.media.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.media.media</code>.
     */
    public void setMedia(byte[] value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.media.media</code>.
     */
    public byte[] getMedia() {
        return (byte[]) get(1);
    }

    /**
     * Setter for <code>public.media.media_type</code>.
     */
    public void setMediaType(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.media.media_type</code>.
     */
    public String getMediaType() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.media.media_format</code>.
     */
    public void setMediaFormat(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.media.media_format</code>.
     */
    public String getMediaFormat() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<UUID, byte[], String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<UUID, byte[], String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Media.MEDIA.ID;
    }

    @Override
    public Field<byte[]> field2() {
        return Media.MEDIA.MEDIA_;
    }

    @Override
    public Field<String> field3() {
        return Media.MEDIA.MEDIA_TYPE;
    }

    @Override
    public Field<String> field4() {
        return Media.MEDIA.MEDIA_FORMAT;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public byte[] component2() {
        return getMedia();
    }

    @Override
    public String component3() {
        return getMediaType();
    }

    @Override
    public String component4() {
        return getMediaFormat();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public byte[] value2() {
        return getMedia();
    }

    @Override
    public String value3() {
        return getMediaType();
    }

    @Override
    public String value4() {
        return getMediaFormat();
    }

    @Override
    public MediaRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public MediaRecord value2(byte[] value) {
        setMedia(value);
        return this;
    }

    @Override
    public MediaRecord value3(String value) {
        setMediaType(value);
        return this;
    }

    @Override
    public MediaRecord value4(String value) {
        setMediaFormat(value);
        return this;
    }

    @Override
    public MediaRecord values(UUID value1, byte[] value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MediaRecord
     */
    public MediaRecord() {
        super(Media.MEDIA);
    }

    /**
     * Create a detached, initialised MediaRecord
     */
    public MediaRecord(UUID id, byte[] media, String mediaType, String mediaFormat) {
        super(Media.MEDIA);

        setId(id);
        setMedia(media);
        setMediaType(mediaType);
        setMediaFormat(mediaFormat);
    }

    /**
     * Create a detached, initialised MediaRecord
     */
    public MediaRecord(jooq.tables.pojos.Media value) {
        super(Media.MEDIA);

        if (value != null) {
            setId(value.getId());
            setMedia(value.getMedia());
            setMediaType(value.getMediaType());
            setMediaFormat(value.getMediaFormat());
        }
    }
}
