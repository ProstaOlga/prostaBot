/*
 * This file is generated by jOOQ.
 */
package jooq.tables.daos;


import java.util.List;
import java.util.Optional;
import java.util.UUID;

import jooq.tables.Media;
import jooq.tables.records.MediaRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class MediaDao extends DAOImpl<MediaRecord, jooq.tables.pojos.Media, UUID> {

    /**
     * Create a new MediaDao without any configuration
     */
    public MediaDao() {
        super(Media.MEDIA, jooq.tables.pojos.Media.class);
    }

    /**
     * Create a new MediaDao with an attached configuration
     */
    @Autowired
    public MediaDao(Configuration configuration) {
        super(Media.MEDIA, jooq.tables.pojos.Media.class, configuration);
    }

    @Override
    public UUID getId(jooq.tables.pojos.Media object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.Media> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Media.MEDIA.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<jooq.tables.pojos.Media> fetchById(UUID... values) {
        return fetch(Media.MEDIA.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public jooq.tables.pojos.Media fetchOneById(UUID value) {
        return fetchOne(Media.MEDIA.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<jooq.tables.pojos.Media> fetchOptionalById(UUID value) {
        return fetchOptional(Media.MEDIA.ID, value);
    }

    /**
     * Fetch records that have <code>media BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.Media> fetchRangeOfMedia(byte[] lowerInclusive, byte[] upperInclusive) {
        return fetchRange(Media.MEDIA.MEDIA_, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>media IN (values)</code>
     */
    public List<jooq.tables.pojos.Media> fetchByMedia(byte[]... values) {
        return fetch(Media.MEDIA.MEDIA_, values);
    }

    /**
     * Fetch records that have <code>media_type BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.Media> fetchRangeOfMediaType(String lowerInclusive, String upperInclusive) {
        return fetchRange(Media.MEDIA.MEDIA_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>media_type IN (values)</code>
     */
    public List<jooq.tables.pojos.Media> fetchByMediaType(String... values) {
        return fetch(Media.MEDIA.MEDIA_TYPE, values);
    }
}
