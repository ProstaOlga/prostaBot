/*
 * This file is generated by jOOQ.
 */
package db;


import db.tables.Account;
import db.tables.AccountChat;
import db.tables.Chat;
import db.tables.FlywaySchemaHistory;
import db.tables.Media;
import db.tables.records.AccountChatRecord;
import db.tables.records.AccountRecord;
import db.tables.records.ChatRecord;
import db.tables.records.FlywaySchemaHistoryRecord;
import db.tables.records.MediaRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AccountRecord> ACCOUNT_PKEY = Internal.createUniqueKey(Account.ACCOUNT, DSL.name("account_pkey"), new TableField[] { Account.ACCOUNT.TELEGRAM_ID }, true);
    public static final UniqueKey<AccountChatRecord> ACCOUNT_CHAT_PKEY = Internal.createUniqueKey(AccountChat.ACCOUNT_CHAT, DSL.name("account_chat_pkey"), new TableField[] { AccountChat.ACCOUNT_CHAT.ID }, true);
    public static final UniqueKey<ChatRecord> CHAT_PKEY = Internal.createUniqueKey(Chat.CHAT, DSL.name("chat_pkey"), new TableField[] { Chat.CHAT.CHAT_ID }, true);
    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, DSL.name("flyway_schema_history_pk"), new TableField[] { FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);
    public static final UniqueKey<MediaRecord> MEDIA_PKEY = Internal.createUniqueKey(Media.MEDIA, DSL.name("media_pkey"), new TableField[] { Media.MEDIA.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AccountChatRecord, AccountRecord> ACCOUNT_CHAT__FK_EXISTS_ACCOUNT = Internal.createForeignKey(AccountChat.ACCOUNT_CHAT, DSL.name("fk_exists_account"), new TableField[] { AccountChat.ACCOUNT_CHAT.ACCOUNT_ID }, Keys.ACCOUNT_PKEY, new TableField[] { Account.ACCOUNT.TELEGRAM_ID }, true);
    public static final ForeignKey<AccountChatRecord, ChatRecord> ACCOUNT_CHAT__FK_EXISTS_CHAT = Internal.createForeignKey(AccountChat.ACCOUNT_CHAT, DSL.name("fk_exists_chat"), new TableField[] { AccountChat.ACCOUNT_CHAT.CHAT_ID }, Keys.CHAT_PKEY, new TableField[] { Chat.CHAT.CHAT_ID }, true);
}
